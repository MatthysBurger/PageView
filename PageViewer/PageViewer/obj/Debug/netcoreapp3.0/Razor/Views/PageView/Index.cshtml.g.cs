#pragma checksum "I:\git-new\PageViewer\PageViewer\PageViewer\Views\PageView\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "61b7c9c8668a9dacfb2ca06e005b962e7537b122"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_PageView_Index), @"mvc.1.0.view", @"/Views/PageView/Index.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/PageView/Index.cshtml", typeof(AspNetCore.Views_PageView_Index))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "I:\git-new\PageViewer\PageViewer\PageViewer\Views\_ViewImports.cshtml"
using PageViewer;

#line default
#line hidden
#line 2 "I:\git-new\PageViewer\PageViewer\PageViewer\Views\_ViewImports.cshtml"
using PageViewer.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"61b7c9c8668a9dacfb2ca06e005b962e7537b122", @"/Views/PageView/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"cb4e854de9fded216eb90e2a15ca9df04a18d285", @"/Views/_ViewImports.cshtml")]
    public class Views_PageView_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<PageDirectory>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n\r\n");
#line 4 "I:\git-new\PageViewer\PageViewer\PageViewer\Views\PageView\Index.cshtml"
  
    ViewData["Title"] = "Page View COOL";

#line default
#line hidden
            WriteLiteral("\r\n<h1>Pages</h1>\r\n\r\n<br />\r\n\r\n");
#line 12 "I:\git-new\PageViewer\PageViewer\PageViewer\Views\PageView\Index.cshtml"
 using (Html.BeginForm())
{

#line default
#line hidden
            WriteLiteral("    <p>\r\n        Find by name: ");
#line 15 "I:\git-new\PageViewer\PageViewer\PageViewer\Views\PageView\Index.cshtml"
                 Write(Html.TextBox("SearchString"));

#line default
#line hidden
            WriteLiteral("\r\n        <input type=\"submit\" value=\"Search\" />\r\n    </p>\r\n");
#line 18 "I:\git-new\PageViewer\PageViewer\PageViewer\Views\PageView\Index.cshtml"
}

#line default
#line hidden
            WriteLiteral("\r\n<br />\r\n\r\n<h3>Total pages found = ");
#line 22 "I:\git-new\PageViewer\PageViewer\PageViewer\Views\PageView\Index.cshtml"
                   Write(Model.Count);

#line default
#line hidden
            WriteLiteral("</h3>\r\n\r\n<ul id=\"myUL\">\r\n    ");
#line 25 "I:\git-new\PageViewer\PageViewer\PageViewer\Views\PageView\Index.cshtml"
Write(Html.Raw(GetTree(@Model, true)));

#line default
#line hidden
            WriteLiteral(@"
</ul>

<script>
    var toggler = document.getElementsByClassName(""caret"");
    var i;

    for (i = 0; i < toggler.length; i++) {
        toggler[i].addEventListener(""click"", function () {
            this.parentElement.querySelector("".nested"").classList.toggle(""active"");
            this.classList.toggle(""caret-down"");
        });
    }
</script>

");
        }
        #pragma warning restore 1998
#line 40 "I:\git-new\PageViewer\PageViewer\PageViewer\Views\PageView\Index.cshtml"
           
    public string GetTree(PageDirectory pd, bool hideroot = false)
    {
        string treeHTML = string.Empty;

        if (!hideroot)
        {
            treeHTML += "<li>";
            treeHTML += "<span class=\"caret\">";
            treeHTML += pd.Name;
            treeHTML += "</span>";

            treeHTML += "<ul class=\"nested active\">";

            foreach (PageDirectory spd in pd.PageDirectories)
            {
                treeHTML += GetTree(spd);
            }

            foreach (PageView spv in pd.PageViews)
            {
                treeHTML += GetTree(spv);
            }

            treeHTML += "</ul>";

            treeHTML += "</li>";
        }
        else
        {
            foreach (PageDirectory spd in pd.PageDirectories)
            {
                treeHTML += GetTree(spd);
            }
        }

        return treeHTML;
    }

    public string GetTree(PageView pv)
    {
        string treeHTML = string.Empty;

        treeHTML += "<li><a href=\"./PageView/Details/" + pv.ID + "\">";
        treeHTML += pv.Name;
        treeHTML += "</a></li>";

        return treeHTML;
    }

#line default
#line hidden
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<PageDirectory> Html { get; private set; }
    }
}
#pragma warning restore 1591
